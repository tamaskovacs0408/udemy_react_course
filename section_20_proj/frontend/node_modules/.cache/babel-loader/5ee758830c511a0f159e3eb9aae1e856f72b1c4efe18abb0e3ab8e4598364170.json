{"ast":null,"code":"var _jsxFileName = \"C:\\\\Udemy\\\\udemy_react_course\\\\section_20_proj\\\\frontend\\\\src\\\\pages\\\\Error.js\",\n  _s = $RefreshSig$();\nimport { useRouteError } from \"react-router-dom\";\nimport PageContent from \"../components/PageContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorPage = () => {\n  _s();\n  const error = useRouteError();\n  let title = \"An error occurred\";\n  let message = \"Something went wrong!\";\n  if (error.status === 500) {\n    var _error$data;\n    // message = JSON.parse(error.data).message;\n    // Don't have to use the JSON.parse() method, because using the json() method in the Events.js\n    message = error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message;\n  }\n  if (error.status === 404) {\n    title = \"Not found\";\n    message = \"Couldn't find resource or page.\";\n  }\n  return /*#__PURE__*/_jsxDEV(PageContent, {\n    title: title,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ErrorPage, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = ErrorPage;\nexport default ErrorPage;\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["useRouteError","PageContent","jsxDEV","_jsxDEV","ErrorPage","_s","error","title","message","status","_error$data","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Udemy/udemy_react_course/section_20_proj/frontend/src/pages/Error.js"],"sourcesContent":["import { useRouteError } from \"react-router-dom\"\r\nimport PageContent from \"../components/PageContent\"\r\n\r\nconst ErrorPage = () => {\r\n  const error = useRouteError();\r\n\r\n  let title = \"An error occurred\";\r\n  let message = \"Something went wrong!\";\r\n\r\n  if (error.status === 500) {\r\n    // message = JSON.parse(error.data).message;\r\n    // Don't have to use the JSON.parse() method, because using the json() method in the Events.js\r\n    message = error?.data?.message;\r\n  }\r\n\r\n  if (error.status === 404) {\r\n    title = \"Not found\"\r\n    message = \"Couldn't find resource or page.\";\r\n  }\r\n\r\n  return (\r\n    <PageContent title={title}>\r\n      <p>{message}</p>\r\n    </PageContent>\r\n  )\r\n}\r\n\r\nexport default ErrorPage"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,WAAW,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAGN,aAAa,CAAC,CAAC;EAE7B,IAAIO,KAAK,GAAG,mBAAmB;EAC/B,IAAIC,OAAO,GAAG,uBAAuB;EAErC,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;IAAA,IAAAC,WAAA;IACxB;IACA;IACAF,OAAO,GAAGF,KAAK,aAALA,KAAK,wBAAAI,WAAA,GAALJ,KAAK,CAAEK,IAAI,cAAAD,WAAA,uBAAXA,WAAA,CAAaF,OAAO;EAChC;EAEA,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;IACxBF,KAAK,GAAG,WAAW;IACnBC,OAAO,GAAG,iCAAiC;EAC7C;EAEA,oBACEL,OAAA,CAACF,WAAW;IAACM,KAAK,EAAEA,KAAM;IAAAK,QAAA,eACxBT,OAAA;MAAAS,QAAA,EAAIJ;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAElB,CAAC;AAAAX,EAAA,CAtBKD,SAAS;EAAA,QACCJ,aAAa;AAAA;AAAAiB,EAAA,GADvBb,SAAS;AAwBf,eAAeA,SAAS;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}