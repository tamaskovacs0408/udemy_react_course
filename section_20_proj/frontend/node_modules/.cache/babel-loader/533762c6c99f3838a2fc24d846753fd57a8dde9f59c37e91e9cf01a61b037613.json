{"ast":null,"code":"var _jsxFileName = \"C:\\\\Udemy\\\\udemy_react_course\\\\section_20_proj\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage, { loader as eventDetailLoader } from \"./pages/EventDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport Root from \"./pages/Root\";\nimport EventsRoot from \"./pages/EventsRoot\";\nimport Error from \"./pages/Error\";\n\n// Create a router using createBrowserRouter function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 14\n  }, this),\n  // Render the Root component for the root path\n  errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 19\n  }, this),\n  // Render the Error component for any errors\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }, this)\n  },\n  // Render the HomePage component for the root path\n  {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this),\n    // Render the EventsRoot component for the /events path\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this),\n      // Render the EventsPage component for the /events path\n      loader: eventsLoader // Load events data using eventsLoader\n    }, {\n      path: \":eventId\",\n      loader: eventDetailLoader,\n      // Load event detail data using eventDetailLoader\n      children: [{\n        path: \"\",\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 26\n        }, this) // Render the EventDetailPage component for the /events/:eventId path\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 39\n        }, this)\n      } // Render the NewEventPage component for the /events/:eventId/new path\n      ]\n    }, {\n      path: \":eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }, this)\n    } // Render the EditEventPage component for the /events/:eventId/edit path\n    ]\n  }]\n}]);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","eventDetailLoader","NewEventPage","EditEventPage","Root","EventsRoot","Error","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","App","_c","$RefreshReg$"],"sources":["C:/Udemy/udemy_react_course/section_20_proj/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage, {\n  loader as eventDetailLoader,\n} from \"./pages/EventDetail\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport Root from \"./pages/Root\";\nimport EventsRoot from \"./pages/EventsRoot\";\nimport Error from \"./pages/Error\";\n\n// Create a router using createBrowserRouter function\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Root />, // Render the Root component for the root path\n    errorElement: <Error />, // Render the Error component for any errors\n    children: [\n      { index: true, element: <HomePage /> }, // Render the HomePage component for the root path\n      {\n        path: \"events\",\n        element: <EventsRoot />, // Render the EventsRoot component for the /events path\n        children: [\n          {\n            path: \"\",\n            element: <EventsPage />, // Render the EventsPage component for the /events path\n            loader: eventsLoader, // Load events data using eventsLoader\n          },\n          {\n            path: \":eventId\",\n            loader: eventDetailLoader, // Load event detail data using eventDetailLoader\n            children: [\n              {\n                path: \"\",\n                element: <EventDetailPage />, // Render the EventDetailPage component for the /events/:eventId path\n              },\n              { path: \"new\", element: <NewEventPage /> }, // Render the NewEventPage component for the /events/:eventId/new path\n            ],\n          },\n          { path: \":eventId/edit\", element: <EditEventPage /> }, // Render the EditEventPage component for the /events/:eventId/edit path\n        ],\n      },\n    ],\n  },\n]);\n\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,IAAIC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AACnE,OAAOC,eAAe,IACpBF,MAAM,IAAIG,iBAAiB,QACtB,qBAAqB;AAC5B,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,KAAK,MAAM,eAAe;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGd,mBAAmB,CAAC,CACjC;EACEe,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACJ,IAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAAE;EACnBC,YAAY,eAAER,OAAA,CAACF,KAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAAE;EACzBE,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACZ,QAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;EAAE;EACxC;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACH,UAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAE;IACzBE,QAAQ,EAAE,CACR;MACEP,IAAI,EAAE,EAAE;MACRC,OAAO,eAAEH,OAAA,CAACX,UAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAE;MACzBjB,MAAM,EAAEC,YAAY,CAAE;IACxB,CAAC,EACD;MACEW,IAAI,EAAE,UAAU;MAChBZ,MAAM,EAAEG,iBAAiB;MAAE;MAC3BgB,QAAQ,EAAE,CACR;QACEP,IAAI,EAAE,EAAE;QACRC,OAAO,eAAEH,OAAA,CAACR,eAAe;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,CAAE;MAChC,CAAC,EACD;QAAEL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEH,OAAA,CAACN,YAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,CAAE;MAAA;IAEhD,CAAC,EACD;MAAEL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACL,aAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,CAAE;IAAA;EAE3D,CAAC;AAEL,CAAC,CACF,CAAC;;AAGF,SAASI,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAACd,cAAc;IAACe,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACK,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}